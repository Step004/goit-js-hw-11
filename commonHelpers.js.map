{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["// У файлі pixabay-api.js зберігай функції для HTTP-запитів.\n\nconst KEY = '42496728-577636fc2b585ecd9d4373a90';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport function getImages(inputValue) {\n    const LINK = `${BASE_URL}?key=${KEY}&q=${inputValue}`;\n    return fetch(LINK)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error('image error!');\n            }\n            return response.json();\n        });\n}\n","// У файлі render-functions.js створи функції для відображення елементів інтерфейсу.\n\nimport iziToast from 'izitoast';\n\nexport function renderImages(images, list) {\n    if (images.length === 0) {\n        iziToast.error({\n            title: '',\n            message: 'Sorry, there are no images matching your search query. Please, try again!',\n            position: 'topRight',\n        });\n    }\n    list.innerHTML = images.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => {\n        return `<li class=\"gallery-item\">\n                    <a class=\"gallery-link\" href=\"${largeImageURL}\">\n                        <img class=\"gallery-image\" src=\"${webformatURL}\" alt=\"${tags}\" />\n                    </a>\n                    <div class=\"parameters\">\n                        <div class=\"params\">\n                            <p class=\"options\">Likes</p>\n                            <p class=\"quantity\">${likes}</p>\n                        </div>\n                        <div class=\"params\">\n                            <p class=\"options\">Views</p>\n                            <p class=\"quantity\">${views}</p>\n                        </div>\n                        <div class=\"params\">\n                            <p class=\"options\">Comments</p>\n                            <p class=\"quantity\">${comments}</p>\n                        </div>\n                        <div class=\"params\">\n                            <p class=\"options\">Downloads</p>\n                            <p class=\"quantity\">${downloads}</p>\n                        </div>\n                    </div>\n                </li>`;\n    }).join('');\n}\n\nexport function clearList(list, gallery) {\n    list.innerHTML = '';\n     if (gallery) {\n       gallery.refresh();\n     }\n}\n","// main.js\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { getImages } from './js/pixabay-api';\nimport { renderImages } from './js/render-functions';\nimport { clearList } from './js/render-functions';\n\nconst input = document.querySelector('.input');\nconst list = document.querySelector('.gallery');\nconst form = document.querySelector('.form');\nconst loader = document.querySelector('.loader');\nlet gallery;\n\nform.addEventListener('submit', getPhoto);\n\nfunction getPhoto(event) {\n  event.preventDefault();\n  const inputValue = input.value;\n  loader.style.display = 'block';\n\n  clearList(list, gallery);\n\n  getImages(inputValue)\n    .then(data => {\n      const images = data.hits;\n\n      renderImages(images, list);\n\n       gallery = new SimpleLightbox('.gallery a', {\n        background: 'rgba(46, 47, 66, 0.8)',\n        captionDelay: 250,\n        captionsData: 'alt',\n      });\n\n      gallery.on('error.simplelightbox', function (e) {\n        console.log(e);\n      });\n    })\n    .catch(error => {\n      iziToast.error({\n        title: '',\n        message:\n          'Sorry, there was an error while fetching images. Please, try again later!',\n        position: 'topRight',\n      });\n    })\n    .finally(() => {\n      loader.style.display = 'none';\n      input.value = '';\n    });\n}\n"],"names":["KEY","BASE_URL","getImages","inputValue","LINK","response","renderImages","images","list","iziToast","webformatURL","largeImageURL","tags","likes","views","comments","downloads","clearList","gallery","input","form","loader","getPhoto","event","data","SimpleLightbox","error"],"mappings":"6vBAEA,MAAMA,EAAM,qCACNC,EAAW,2BAEV,SAASC,EAAUC,EAAY,CAClC,MAAMC,EAAO,GAAGH,CAAQ,QAAQD,CAAG,MAAMG,CAAU,GACnD,OAAO,MAAMC,CAAI,EACZ,KAAKC,GAAY,CACd,GAAI,CAACA,EAAS,GACV,MAAM,IAAI,MAAM,cAAc,EAElC,OAAOA,EAAS,MAC5B,CAAS,CACT,CCVO,SAASC,EAAaC,EAAQC,EAAM,CACnCD,EAAO,SAAW,GAClBE,EAAS,MAAM,CACX,MAAO,GACP,QAAS,4EACT,SAAU,UACtB,CAAS,EAELD,EAAK,UAAYD,EAAO,IAAI,CAAC,CAAE,aAAAG,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IACxF;AAAA,oDACqCL,CAAa;AAAA,0DACPD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,kDAKlCC,CAAK;AAAA;AAAA;AAAA;AAAA,kDAILC,CAAK;AAAA;AAAA;AAAA;AAAA,kDAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,kDAIRC,CAAS;AAAA;AAAA;AAAA,sBAItD,EAAE,KAAK,EAAE,CACd,CAEO,SAASC,EAAUT,EAAMU,EAAS,CACrCV,EAAK,UAAY,GACZU,GACFA,EAAQ,QAAO,CAEtB,CCnCA,MAAMC,EAAQ,SAAS,cAAc,QAAQ,EACvCX,EAAO,SAAS,cAAc,UAAU,EACxCY,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAS,SAAS,cAAc,SAAS,EAC/C,IAAIH,EAEJE,EAAK,iBAAiB,SAAUE,CAAQ,EAExC,SAASA,EAASC,EAAO,CACvBA,EAAM,eAAc,EACpB,MAAMpB,EAAagB,EAAM,MACzBE,EAAO,MAAM,QAAU,QAEvBJ,EAAUT,EAAMU,CAAO,EAEvBhB,EAAUC,CAAU,EACjB,KAAKqB,GAAQ,CACZ,MAAMjB,EAASiB,EAAK,KAEpBlB,EAAaC,EAAQC,CAAI,EAExBU,EAAU,IAAIO,EAAe,aAAc,CAC1C,WAAY,wBACZ,aAAc,IACd,aAAc,KACtB,CAAO,EAEDP,EAAQ,GAAG,uBAAwB,SAAU,EAAG,CAC9C,QAAQ,IAAI,CAAC,CACrB,CAAO,CACP,CAAK,EACA,MAAMQ,GAAS,CACdjB,EAAS,MAAM,CACb,MAAO,GACP,QACE,4EACF,SAAU,UAClB,CAAO,CACP,CAAK,EACA,QAAQ,IAAM,CACbY,EAAO,MAAM,QAAU,OACvBF,EAAM,MAAQ,EACpB,CAAK,CACL"}